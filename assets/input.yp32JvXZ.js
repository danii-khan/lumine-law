import{r as c,m as g,j as x,c as y}from"./index.BPFYR4T7.js";function h(e,t){return`${e} returned \`undefined\`. Seems you forgot to wrap component within ${t}`}function C(e={}){const{name:t,strict:n=!0,hookName:r="useContext",providerName:o="Provider",errorMessage:s,defaultValue:i}=e,a=c.createContext(i);a.displayName=t;function u(){var l;const f=c.useContext(a);if(!f&&n){const p=new Error(s??h(r,o));throw p.name="ContextError",(l=Error.captureStackTrace)==null||l.call(Error,p,u),p}return f}return[a.Provider,u,a]}function P(e,t){typeof e=="function"?e(t):e!=null&&(e.current=t)}function w(...e){return t=>{for(const n of e)P(n,t)}}function R(e){var r,o;let t=(r=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:r.get,n=t&&"isReactWarning"in t&&t.isReactWarning;return n?e.ref:(t=(o=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:o.get,n=t&&"isReactWarning"in t&&t.isReactWarning,n?e.props.ref:e.props.ref||e.ref)}const d=e=>{const t=c.memo(c.forwardRef((n,r)=>{const{asChild:o,children:s,...i}=n;if(!o)return c.createElement(e,{...i,ref:r},s);const a=c.Children.only(s);if(!c.isValidElement(a))return null;const u=R(a);return c.cloneElement(a,{...g(i,a.props),ref:r?w(r,u):u})}));return t.displayName=e.displayName||e.name,t},E=()=>{const e=new Map;return new Proxy(d,{apply(t,n,r){return d(r[0])},get(t,n){const r=n;return e.has(r)||e.set(r,d(r)),e.get(r)}})},F=E(),k=()=>(e,t)=>t.reduce((n,r)=>{const[o,s]=n,i=r;return s[i]!==void 0&&(o[i]=s[i]),delete s[i],[o,s]},[{},{...e}]),[I,v]=C({name:"FieldContext",hookName:"useFieldContext",providerName:"<FieldProvider />",strict:!1}),m=c.forwardRef((e,t)=>{const n=v(),r=g(n==null?void 0:n.getInputProps(),e);return x.jsx(F.input,{...r,ref:t})});m.displayName="FieldInput";const{withContext:N,PropsProvider:W}=y({key:"input"}),O=N(m);export{I as F,O as I,F as a,k as b,C as c,w as d,v as u};
